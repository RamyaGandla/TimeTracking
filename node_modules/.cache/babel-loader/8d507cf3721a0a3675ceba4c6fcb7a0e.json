{"ast":null,"code":"var _jsxFileName = \"/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\n\nclass TasksManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskName: '',\n      taskNameError: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    if (this.state.taskName !== '') {\n      // const localUser = localStorage.getItem('user');\n      // localStorage.clear();\n      // localStorage.setItem('user', 1);\n      window.location.href = '/manageEmployees';\n    } else {\n      this.setState({\n        taskNameError: true\n      });\n    }\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      taskNameError: false\n    });\n  }\n\n  render() {\n    const {\n      taskName,\n      taskNameError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Form, {\n      style: {\n        width: '600px',\n        height: '200px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, 'Task name', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 84\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"taskName\",\n      value: taskName,\n      type: \"text\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"taskName\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    })), taskNameError === true && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Task name is required\")), /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n      style: {\n        float: 'right',\n        backgroundColor: '#EC661C',\n        borderColor: \"black\",\n        marginBottom: '25px',\n        marginTop: '25px',\n        width: '80px'\n      },\n      type: \"button\",\n      onClick: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, 'Save'))));\n  }\n\n}\n\nexport default TasksManager;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js"],"names":["React","Component","reactbootstrap","TasksManager","constructor","props","state","taskName","taskNameError","handleSubmit","bind","handleChange","e","window","location","href","setState","name","value","target","render","width","height","marginbottom","border","color","fontSize","marginBottom","borderColor","borderWidth","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\n\nclass TasksManager extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          taskName: '',\n          taskNameError: false,\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleSubmit(e) {\n      if (this.state.taskName !== '') {\n        // const localUser = localStorage.getItem('user');\n        // localStorage.clear();\n        // localStorage.setItem('user', 1);\n\n\n        window.location.href = '/manageEmployees';\n      } else {\n        this.setState({\n            taskNameError: true,\n        })\n      }\n\n    }\n\n    handleChange(e) {\n      const {name, value} = e.target;\n        this.setState({\n            [name]: value,\n            taskNameError: false,\n        })\n    }\n\n    render() {\n      const { taskName, taskNameError } = this.state\n\n      return (\n        <div className=\"\">\n        <reactbootstrap.Container className=\"pt-5 px-0\">\n          <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n            <reactbootstrap.FormGroup>\n              <div style={{ marginbottom: '15px',border: '0px' }}>\n                <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Task name'}<span style={{ color: 'red' }}> * </span></label>\n                <input\n                  name=\"taskName\"\n                  value={taskName}\n                  type=\"text\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"taskName\"}\n                  onChange={this.handleChange}\n                  autoComplete=\"off\" />\n              </div>\n              {taskNameError === true &&\n                <div style={{ color: 'red', fontSize: '15px' }}>{\"Task name is required\"}</div>\n              }\n            </reactbootstrap.FormGroup>\n            <reactbootstrap.Button style={{ float: 'right',backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={(e) => this.handleSubmit(e)}>\n                  {'Save'}\n            </reactbootstrap.Button>\n          </reactbootstrap.Form>\n        </reactbootstrap.Container>\n      </div>\n      );\n    }\n}\n\nexport default (TasksManager);\n"]},"metadata":{},"sourceType":"module"}
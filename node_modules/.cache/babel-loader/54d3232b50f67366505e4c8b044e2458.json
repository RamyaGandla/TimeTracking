{"ast":null,"code":"var _jsxFileName = \"/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap'; // import DatePicker from 'react-datepicker';\n// import { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport TasksManager from './TasksManager';\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.taskId);\n    console.log(this.props.tasks);\n    this.state = {\n      taskName: '',\n      taskNameError: false,\n      startDate: undefined,\n      endDate: undefined,\n      startTime: undefined,\n      endTime: undefined,\n      showManageTasks: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this); // this.handleDate = this.handleDate.bind(this)\n  }\n\n  handleSubmit(e) {\n    // var today = new Date();\n    // var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    // let startTimeStamp = this.state.startDate + ' ' + time;\n    // let endTimeStamp = this.state.endDate + ' ' + time;\n    if (this.state.taskName !== '') {\n      let existingTasks = this.props.tasks;\n      this.props.handleTasks(e, existingTasks);\n      const details = {\n        \"id\": this.props.tasks.length + 1,\n        \"name\": this.state.taskName,\n        \"startDate\": this.state.startDate + ' ' + this.state.startTime,\n        \"endDate\": this.state.endDate + ' ' + this.state.endTime\n      }; // const localTasks = localStorage.getItem('tasks');\n      // console.log(localTasks);\n      //\n      // this.props.tasks.map((item) => {\n      //   console.log(item);\n      // })\n\n      this.props.tasks.push(details);\n      console.log(this.props.tasks);\n      localStorage.clear();\n      localStorage.setItem('AllTasks', this.props.tasks);\n      this.props.handleTasks(); //\n\n      this.setState({\n        showManageTasks: true\n      }); // return (\n      //   <TasksManager />\n      // <BrowserRouter>\n      //   <Switch>\n      //     <Route exact path='/manageTasks' component={TasksManager} />\n      //   </Switch>\n      // </BrowserRouter>\n      // )\n      // Object.keys(localTasks).map((item) => {\n      //   console.log(item);\n      // })\n    } else {\n      this.setState({\n        taskNameError: true\n      });\n    }\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      taskNameError: false\n    });\n  } // handleDate(e, type = '') {\n  //   var today = new Date();\n  //   const {name, value} = e.target;\n  //   // console.log(e.target);\n  //   // console.log(e.target.name);\n  //   // console.log(e.target.value);\n  //   var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  //   let timeStamp = e.target.value + ' ' + time;\n  //   // console.log(timeStamp);\n  //   this.setState({\n  //       [name]: timeStamp,\n  //   })\n  // }\n\n\n  render() {\n    const {\n      taskName,\n      taskNameError,\n      startDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, !this.state.showManageTasks && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, 'Create task'))), /*#__PURE__*/React.createElement(reactbootstrap.Form, {\n      style: {\n        width: '600px',\n        height: '200px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, 'Task name', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 88\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"taskName\",\n      value: taskName,\n      type: \"text\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"TaskName\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    })), taskNameError === true && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"Task name is required\")), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, 'Start date', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 89\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"startDate\",\n      value: this.state.startDate,\n      type: \"date\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"Start date\",\n      onChange: e => this.setState({\n        startDate: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"startTime\",\n      value: this.state.startTime,\n      type: \"time\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"Start time\",\n      onChange: e => this.setState({\n        startTime: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, 'End date', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 87\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"endDate\",\n      value: this.state.endDate,\n      type: \"date\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"End date\",\n      onChange: e => this.setState({\n        endDate: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"endTime\",\n      value: this.state.endTime,\n      type: \"time\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"Start time\",\n      onChange: e => this.setState({\n        endTime: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n      style: {\n        float: 'right',\n        backgroundColor: '#EC661C',\n        borderColor: \"black\",\n        marginBottom: '25px',\n        marginTop: '25px',\n        width: '80px'\n      },\n      type: \"button\",\n      onClick: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, 'Save')))), this.state.showManageTasks && /*#__PURE__*/React.createElement(TasksManager, {\n      tasks: this.props.tasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js"],"names":["React","Component","reactbootstrap","TasksManager","CreateTask","constructor","props","console","log","taskId","tasks","state","taskName","taskNameError","startDate","undefined","endDate","startTime","endTime","showManageTasks","handleSubmit","bind","handleChange","e","existingTasks","handleTasks","details","length","push","localStorage","clear","setItem","setState","name","value","target","render","color","fontSize","width","height","marginbottom","border","marginBottom","borderColor","borderWidth","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\n// import DatePicker from 'react-datepicker';\n// import { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport TasksManager from './TasksManager'\n\nclass CreateTask extends Component {\n    constructor(props) {\n        super(props)\n        console.log(this.props.taskId)\n        console.log(this.props.tasks);\n        this.state = {\n          taskName: '',\n          taskNameError: false,\n          startDate: undefined,\n          endDate: undefined,\n          startTime: undefined,\n          endTime: undefined,\n          showManageTasks: false,\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        // this.handleDate = this.handleDate.bind(this)\n    }\n\n    handleSubmit(e) {\n      // var today = new Date();\n      // var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      // let startTimeStamp = this.state.startDate + ' ' + time;\n      // let endTimeStamp = this.state.endDate + ' ' + time;\n\n      if (this.state.taskName !== '') {\n        let existingTasks = this.props.tasks\n        this.props.handleTasks(e, existingTasks);\n        const details = {\n          \"id\": this.props.tasks.length + 1,\n          \"name\": this.state.taskName,\n          \"startDate\": this.state.startDate + ' ' + this.state.startTime,\n          \"endDate\": this.state.endDate + ' ' + this.state.endTime,\n        }\n        // const localTasks = localStorage.getItem('tasks');\n        // console.log(localTasks);\n        //\n        // this.props.tasks.map((item) => {\n        //   console.log(item);\n        // })\n        this.props.tasks.push(details)\n        console.log(this.props.tasks);\n        localStorage.clear();\n        localStorage.setItem('AllTasks', this.props.tasks);\n        this.props.handleTasks();\n        //\n        this.setState({\n          showManageTasks: true,\n        })\n\n        // return (\n        //   <TasksManager />\n          // <BrowserRouter>\n          //   <Switch>\n          //     <Route exact path='/manageTasks' component={TasksManager} />\n          //   </Switch>\n          // </BrowserRouter>\n        // )\n\n        // Object.keys(localTasks).map((item) => {\n        //   console.log(item);\n        // })\n      } else {\n        this.setState({\n            taskNameError: true,\n        })\n      }\n\n    }\n\n    handleChange(e) {\n      const {name, value} = e.target;\n        this.setState({\n            [name]: value,\n            taskNameError: false,\n        })\n    }\n\n    // handleDate(e, type = '') {\n    //   var today = new Date();\n    //   const {name, value} = e.target;\n    //   // console.log(e.target);\n    //   // console.log(e.target.name);\n    //   // console.log(e.target.value);\n    //   var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    //   let timeStamp = e.target.value + ' ' + time;\n    //   // console.log(timeStamp);\n    //   this.setState({\n    //       [name]: timeStamp,\n    //   })\n    // }\n\n    render() {\n      const { taskName, taskNameError, startDate } = this.state\n\n      return (\n        <>\n          {!this.state.showManageTasks &&\n            <div className=\"\">\n            <reactbootstrap.Container className=\"pt-5 px-0\">\n              <div style={{ color: '#EC661C', fontSize: '20px'}} >\n                  <span><h4>{'Create task'}</h4></span>\n              </div>\n              <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n                <reactbootstrap.FormGroup>\n                  <div style={{ marginbottom: '15px',border: '0px' }}>\n                    <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Task name'}<span style={{ color: 'red' }}> * </span></label>\n                    <input\n                      name=\"taskName\"\n                      value={taskName}\n                      type=\"text\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"TaskName\"}\n                      onChange={this.handleChange}\n                      autoComplete=\"off\" />\n                  </div>\n                  {taskNameError === true &&\n                    <div style={{ color: 'red', fontSize: '15px' }}>{\"Task name is required\"}</div>\n                  }\n                </reactbootstrap.FormGroup>\n                <reactbootstrap.FormGroup>\n                  <div style={{ marginbottom: '15px',border: '0px' }}>\n                    <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Start date'}<span style={{ color: 'red' }}> * </span></label>\n                    <input\n                      name=\"startDate\"\n                      value={this.state.startDate}\n                      type=\"date\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"Start date\"}\n                      onChange={(e) =>  this.setState({startDate: e.target.value})}\n                    />\n                    &nbsp;\n                    <input\n                      name=\"startTime\"\n                      value={this.state.startTime}\n                      type=\"time\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"Start time\"}\n                      onChange={(e) =>  this.setState({startTime: e.target.value})}\n                    />\n                  </div>\n                </reactbootstrap.FormGroup>\n                <reactbootstrap.FormGroup>\n                  <div style={{ marginbottom: '15px',border: '0px' }}>\n                    <label style={{ color: '#EC661C', fontSize: '14px' }}>{'End date'}<span style={{ color: 'red' }}> * </span></label>\n                    <input\n                      name=\"endDate\"\n                      value={this.state.endDate}\n                      type=\"date\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"End date\"}\n                      onChange={(e) => this.setState({endDate: e.target.value})}\n                    />\n                    &nbsp;\n                    <input\n                      name=\"endTime\"\n                      value={this.state.endTime}\n                      type=\"time\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"Start time\"}\n                      onChange={(e) =>  this.setState({endTime: e.target.value})}\n                    />\n                  </div>\n                </reactbootstrap.FormGroup>\n                <reactbootstrap.Button style={{ float: 'right',backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={(e) => this.handleSubmit(e)}>\n                      {'Save'}\n                </reactbootstrap.Button>\n              </reactbootstrap.Form>\n            </reactbootstrap.Container>\n          </div>\n        }\n        {this.state.showManageTasks &&\n          <TasksManager tasks={this.props.tasks}/>\n        }\n      </>\n      );\n    }\n}\n\nexport default (CreateTask);\n"]},"metadata":{},"sourceType":"module"}
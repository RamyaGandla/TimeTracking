{"ast":null,"code":"var _jsxFileName = \"/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskId: this.props.taskId !== null && this.props.taskId !== undefined ? this.props.taskId : null,\n      taskName: '',\n      taskNameError: false,\n      startDate: undefined,\n      endDate: undefined,\n      startTime: undefined,\n      endTime: undefined,\n      currentTimer: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.taskId !== null && this.state.taskId !== undefined) {\n      Object.values(this.props.tasks).map((item, index) => {\n        if (item.id === this.state.taskId) {\n          let startDateData = item.startDate.split(\" \");\n          let endDateData = item.endDate.split(\" \");\n          this.setState({\n            taskName: item.name,\n            startDate: startDateData[0],\n            endDate: endDateData[0],\n            startTime: startDateData[1],\n            endTime: endDateData[1],\n            currentTimer: startDateData\n          });\n        }\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.taskId !== this.props.taskId) {\n      this.setState({\n        taskName: '',\n        taskId: null,\n        startDate: '',\n        endDate: '',\n        startTime: '',\n        endTime: '',\n        currentTimer: ''\n      });\n    }\n  }\n\n  handleSubmit(e) {\n    if (this.state.taskName !== '') {\n      if (this.state.taskId !== null && this.state.taskId !== undefined) {\n        Object.values(this.props.tasks).map((item, index) => {\n          if (item.id === this.state.taskId) {\n            // console.log(this.state.currentTimer);\n            // console.log(this.state.startDate + ' ' + this.state.startTime);\n            // var Difference_In_Time = this.state.currentTimer[0] - this.state.startDate;\n            this.props.tasks[index]['name'] = this.state.taskName;\n            this.props.tasks[index]['startDate'] = this.state.startDate + ' ' + this.state.startTime;\n            this.props.tasks[index]['endDate'] = this.state.endDate + ' ' + this.state.endTime;\n            this.props.tasks[index]['timer'] = \"Timing cahnged from\" + this.state.currentTimer + \"to\" + this.state.endDate + ' ' + this.state.endTime;\n          }\n        });\n        this.props.handleTasks();\n      } else {\n        let existingTasks = this.props.tasks;\n        this.props.handleTasks(e, existingTasks);\n        const details = {\n          \"id\": this.props.tasks.length + 1,\n          \"name\": this.state.taskName,\n          \"startDate\": this.state.startDate + ' ' + this.state.startTime,\n          \"endDate\": this.state.endDate + ' ' + this.state.endTime,\n          \"timer\": ''\n        };\n        this.props.tasks.push(details);\n        localStorage.clear();\n        localStorage.setItem('AllTasks', this.props.tasks);\n        this.props.handleTasks();\n      }\n    } else {\n      this.setState({\n        taskNameError: true\n      });\n    }\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      taskNameError: false\n    });\n  }\n\n  render() {\n    const {\n      taskName,\n      taskNameError,\n      startDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, 'Create task'))), /*#__PURE__*/React.createElement(reactbootstrap.Form, {\n      style: {\n        width: '600px',\n        height: '200px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, 'Task name', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 84\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"taskName\",\n      value: taskName,\n      type: \"text\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"TaskName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    })), taskNameError === true && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Task name is required\")), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, 'Start date', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 85\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"startDate\",\n      value: this.state.startDate,\n      type: \"date\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"Start date\",\n      onChange: e => this.setState({\n        startDate: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"startTime\",\n      value: this.state.startTime,\n      type: \"time\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"Start time\",\n      onChange: e => this.setState({\n        startTime: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, 'End date', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 83\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"endDate\",\n      value: this.state.endDate,\n      type: \"date\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"End date\",\n      onChange: e => this.setState({\n        endDate: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"endTime\",\n      value: this.state.endTime,\n      type: \"time\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"Start time\",\n      onChange: e => this.setState({\n        endTime: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n      style: {\n        float: 'right',\n        backgroundColor: '#EC661C',\n        borderColor: \"black\",\n        marginBottom: '25px',\n        marginTop: '25px',\n        width: '80px'\n      },\n      type: \"button\",\n      onClick: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, 'Save'))));\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js"],"names":["React","Component","reactbootstrap","CreateTask","constructor","props","state","taskId","undefined","taskName","taskNameError","startDate","endDate","startTime","endTime","currentTimer","handleSubmit","bind","handleChange","componentDidMount","Object","values","tasks","map","item","index","id","startDateData","split","endDateData","setState","name","componentDidUpdate","prevProps","prevState","e","handleTasks","existingTasks","details","length","push","localStorage","clear","setItem","value","target","render","color","fontSize","width","height","marginbottom","border","marginBottom","borderColor","borderWidth","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\n\nclass CreateTask extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          taskId: (this.props.taskId !== null && this.props.taskId !== undefined) ? this.props.taskId : null,\n          taskName: '',\n          taskNameError: false,\n          startDate: undefined,\n          endDate: undefined,\n          startTime: undefined,\n          endTime: undefined,\n          currentTimer: '',\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n      if (this.state.taskId !== null && this.state.taskId !== undefined) {\n        Object.values(this.props.tasks).map((item, index) => {\n          if(item.id === this.state.taskId) {\n            let startDateData = item.startDate.split(\" \")\n            let endDateData = item.endDate.split(\" \")\n            this.setState({\n              taskName: item.name,\n              startDate: startDateData[0],\n              endDate: endDateData[0],\n              startTime: startDateData[1],\n              endTime: endDateData[1],\n              currentTimer: startDateData,\n            })\n          }\n        })\n      }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      if (prevProps.taskId !== this.props.taskId) {\n        this.setState({\n          taskName: '',\n          taskId: null,\n          startDate: '',\n          endDate: '',\n          startTime: '',\n          endTime: '',\n          currentTimer: '',\n        })\n      }\n    }\n\n    handleSubmit(e) {\n      if (this.state.taskName !== '') {\n        if (this.state.taskId !== null && this.state.taskId !== undefined) {\n          Object.values(this.props.tasks).map((item, index) => {\n            if(item.id === this.state.taskId) {\n              // console.log(this.state.currentTimer);\n              // console.log(this.state.startDate + ' ' + this.state.startTime);\n              // var Difference_In_Time = this.state.currentTimer[0] - this.state.startDate;\n              this.props.tasks[index]['name'] = this.state.taskName\n              this.props.tasks[index]['startDate'] = this.state.startDate + ' ' + this.state.startTime\n              this.props.tasks[index]['endDate'] = this.state.endDate + ' ' + this.state.endTime\n              this.props.tasks[index]['timer'] = \"Timing cahnged from\" + this.state.currentTimer + \"to\" + this.state.endDate + ' ' + this.state.endTime\n            }\n          })\n          this.props.handleTasks();\n        } else {\n          let existingTasks = this.props.tasks\n          this.props.handleTasks(e, existingTasks);\n          const details = {\n            \"id\": this.props.tasks.length + 1,\n            \"name\": this.state.taskName,\n            \"startDate\": this.state.startDate + ' ' + this.state.startTime,\n            \"endDate\": this.state.endDate + ' ' + this.state.endTime,\n            \"timer\": '',\n          }\n\n          this.props.tasks.push(details)\n          localStorage.clear();\n          localStorage.setItem('AllTasks', this.props.tasks);\n          this.props.handleTasks();\n        }\n      } else {\n        this.setState({\n            taskNameError: true,\n        })\n      }\n\n    }\n\n    handleChange(e) {\n      const {name, value} = e.target;\n        this.setState({\n            [name]: value,\n            taskNameError: false,\n        })\n    }\n\n    render() {\n      const { taskName, taskNameError, startDate } = this.state\n\n      return (\n        <div className=\"\">\n        <reactbootstrap.Container>\n          <div style={{ color: '#EC661C', fontSize: '20px'}} >\n              <span><h4>{'Create task'}</h4></span>\n          </div>\n          <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n            <reactbootstrap.FormGroup>\n              <div style={{ marginbottom: '15px',border: '0px' }}>\n                <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Task name'}<span style={{ color: 'red' }}> * </span></label>\n                <input\n                  name=\"taskName\"\n                  value={taskName}\n                  type=\"text\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"TaskName\"}\n                  onChange={this.handleChange}\n                />\n              </div>\n              {taskNameError === true &&\n                <div style={{ color: 'red', fontSize: '15px' }}>{\"Task name is required\"}</div>\n              }\n            </reactbootstrap.FormGroup>\n            <reactbootstrap.FormGroup>\n              <div style={{ marginbottom: '15px',border: '0px' }}>\n                <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Start date'}<span style={{ color: 'red' }}> * </span></label>\n                <input\n                  name=\"startDate\"\n                  value={this.state.startDate}\n                  type=\"date\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"Start date\"}\n                  onChange={(e) =>  this.setState({startDate: e.target.value})}\n                />\n                &nbsp;\n                <input\n                  name=\"startTime\"\n                  value={this.state.startTime}\n                  type=\"time\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"Start time\"}\n                  onChange={(e) =>  this.setState({startTime: e.target.value})}\n                />\n              </div>\n            </reactbootstrap.FormGroup>\n            <reactbootstrap.FormGroup>\n              <div style={{ marginbottom: '15px',border: '0px' }}>\n                <label style={{ color: '#EC661C', fontSize: '14px' }}>{'End date'}<span style={{ color: 'red' }}> * </span></label>\n                <input\n                  name=\"endDate\"\n                  value={this.state.endDate}\n                  type=\"date\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"End date\"}\n                  onChange={(e) => this.setState({endDate: e.target.value})}\n                />\n                &nbsp;\n                <input\n                  name=\"endTime\"\n                  value={this.state.endTime}\n                  type=\"time\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"Start time\"}\n                  onChange={(e) =>  this.setState({endTime: e.target.value})}\n                />\n              </div>\n            </reactbootstrap.FormGroup>\n            <reactbootstrap.Button style={{ float: 'right',backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={(e) => this.handleSubmit(e)}>\n                  {'Save'}\n            </reactbootstrap.Button>\n          </reactbootstrap.Form>\n        </reactbootstrap.Container>\n      </div>\n      );\n    }\n}\n\nexport default (CreateTask);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\n\nclass TasksManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskName: '',\n      taskNameError: false,\n      startDate: undefined,\n      endDate: undefined // startDate: '',\n      // endDate: '',\n\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this); // this.handleDate = this.handleDate.bind(this)\n  }\n\n  handleSubmit(e) {\n    if (this.state.taskName !== '') {\n      let existingTasks = this.props.tasks;\n      this.props.handleTasks(e, existingTasks);\n      console.log(this.props.tasks);\n      console.log(this.props.startDate);\n      console.log(this.props.endDate); // const localTasks = localStorage.getItem('tasks');\n      // console.log(localTasks);\n      //\n\n      this.props.tasks.map(item => {\n        console.log(item);\n      }); // Object.keys(localTasks).map((item) => {\n      //   console.log(item);\n      // })\n    } else {\n      this.setState({\n        taskNameError: true\n      });\n    }\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      taskNameError: false\n    });\n  } // handleDate(e, type = '') {\n  //   var today = new Date();\n  //   const {name, value} = e.target;\n  //   // console.log(e.target);\n  //   // console.log(e.target.name);\n  //   // console.log(e.target.value);\n  //   var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  //   let timeStamp = e.target.value + ' ' + time;\n  //   // console.log(timeStamp);\n  //   this.setState({\n  //       [name]: timeStamp,\n  //   })\n  // }\n\n\n  render() {\n    const {\n      taskName,\n      taskNameError,\n      startDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, 'Create task'))), /*#__PURE__*/React.createElement(reactbootstrap.Form, {\n      style: {\n        width: '600px',\n        height: '200px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, 'Task name', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 84\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"taskName\",\n      value: taskName,\n      type: \"text\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"TaskName\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    })), taskNameError === true && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Task name is required\")), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, 'Start date', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 85\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"startDate\",\n      value: this.state.startDate,\n      type: \"date\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"Start date\",\n      onChange: e => this.setState({\n        startDate: e.target.value\n      }) // autoComplete=\"off\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, 'End date', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 83\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"endDate\",\n      value: this.state.endDate,\n      type: \"date\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"End date\",\n      onChange: e => this.setState({\n        endDate: e.target.value\n      }),\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n      style: {\n        float: 'right',\n        backgroundColor: '#EC661C',\n        borderColor: \"black\",\n        marginBottom: '25px',\n        marginTop: '25px',\n        width: '80px'\n      },\n      type: \"button\",\n      onClick: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, 'Save'))));\n  }\n\n}\n\nexport default TasksManager;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js"],"names":["React","Component","reactbootstrap","DatePicker","TasksManager","constructor","props","state","taskName","taskNameError","startDate","undefined","endDate","handleSubmit","bind","handleChange","e","existingTasks","tasks","handleTasks","console","log","map","item","setState","name","value","target","render","color","fontSize","width","height","marginbottom","border","marginBottom","borderColor","borderWidth","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\n\nclass TasksManager extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          taskName: '',\n          taskNameError: false,\n          startDate: undefined,\n          endDate: undefined,\n          // startDate: '',\n          // endDate: '',\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        // this.handleDate = this.handleDate.bind(this)\n    }\n\n    handleSubmit(e) {\n      if (this.state.taskName !== '') {\n        let existingTasks = this.props.tasks\n        this.props.handleTasks(e, existingTasks);\n        console.log(this.props.tasks);\n        console.log(this.props.startDate);\n        console.log(this.props.endDate);\n        // const localTasks = localStorage.getItem('tasks');\n        // console.log(localTasks);\n        //\n        this.props.tasks.map((item) => {\n          console.log(item);\n        })\n        // Object.keys(localTasks).map((item) => {\n        //   console.log(item);\n        // })\n      } else {\n        this.setState({\n            taskNameError: true,\n        })\n      }\n\n    }\n\n    handleChange(e) {\n      const {name, value} = e.target;\n        this.setState({\n            [name]: value,\n            taskNameError: false,\n        })\n    }\n\n    // handleDate(e, type = '') {\n    //   var today = new Date();\n    //   const {name, value} = e.target;\n    //   // console.log(e.target);\n    //   // console.log(e.target.name);\n    //   // console.log(e.target.value);\n    //   var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    //   let timeStamp = e.target.value + ' ' + time;\n    //   // console.log(timeStamp);\n    //   this.setState({\n    //       [name]: timeStamp,\n    //   })\n    // }\n\n    render() {\n      const { taskName, taskNameError, startDate } = this.state\n\n      return (\n        <div className=\"\">\n        <reactbootstrap.Container className=\"pt-5 px-0\">\n          <div style={{ color: '#EC661C', fontSize: '20px'}} >\n              <span><h4>{'Create task'}</h4></span>\n          </div>\n          <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n            <reactbootstrap.FormGroup>\n              <div style={{ marginbottom: '15px',border: '0px' }}>\n                <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Task name'}<span style={{ color: 'red' }}> * </span></label>\n                <input\n                  name=\"taskName\"\n                  value={taskName}\n                  type=\"text\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"TaskName\"}\n                  onChange={this.handleChange}\n                  autoComplete=\"off\" />\n              </div>\n              {taskNameError === true &&\n                <div style={{ color: 'red', fontSize: '15px' }}>{\"Task name is required\"}</div>\n              }\n            </reactbootstrap.FormGroup>\n            <reactbootstrap.FormGroup>\n              <div style={{ marginbottom: '15px',border: '0px' }}>\n                <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Start date'}<span style={{ color: 'red' }}> * </span></label>\n                <input\n                  name=\"startDate\"\n                  value={this.state.startDate}\n                  type=\"date\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"Start date\"}\n                  onChange={(e) =>  this.setState({startDate: e.target.value})}\n                  // autoComplete=\"off\"\n                />\n              </div>\n            </reactbootstrap.FormGroup>\n            <reactbootstrap.FormGroup>\n              <div style={{ marginbottom: '15px',border: '0px' }}>\n                <label style={{ color: '#EC661C', fontSize: '14px' }}>{'End date'}<span style={{ color: 'red' }}> * </span></label>\n                <input\n                  name=\"endDate\"\n                  value={this.state.endDate}\n                  type=\"date\"\n                  style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                  id=\"exampleInputPassword1\"\n                  placeholder={\"End date\"}\n                  onChange={(e) => this.setState({endDate: e.target.value})}\n                  autoComplete=\"off\" />\n              </div>\n            </reactbootstrap.FormGroup>\n            <reactbootstrap.Button style={{ float: 'right',backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={(e) => this.handleSubmit(e)}>\n                  {'Save'}\n            </reactbootstrap.Button>\n          </reactbootstrap.Form>\n        </reactbootstrap.Container>\n      </div>\n      );\n    }\n}\n\nexport default (TasksManager);\n"]},"metadata":{},"sourceType":"module"}
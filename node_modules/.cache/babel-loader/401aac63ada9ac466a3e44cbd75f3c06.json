{"ast":null,"code":"var _jsxFileName = \"/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap'; // import DatePicker from 'react-datepicker';\n// import { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n// import TasksManager from './TasksManager'\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.taskId);\n    console.log(this.props.tasks);\n    this.state = {\n      taskId: this.props.taskId !== null && this.props.taskId !== undefined ? this.props.taskId : null,\n      taskName: '',\n      taskNameError: false,\n      startDate: undefined,\n      endDate: undefined,\n      startTime: undefined,\n      endTime: undefined // showManageTasks: false,\n\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this); // this.handleDate = this.handleDate.bind(this)\n  }\n\n  componentDidMount() {\n    console.log(this.state.taskId);\n\n    if (this.state.taskId !== null && this.state.taskId !== undefined) {\n      Object.values(this.props.tasks).map((item, index) => {\n        if (item.id === this.state.taskId) {\n          let startDateData = item.startDate.split(\" \");\n          let endDateData = item.endDate.split(\" \");\n          console.log(startDateData);\n          this.setState({\n            taskName: item.name,\n            startDate: startDateData[0],\n            endDate: endDateData[0],\n            startTime: startDateData[1],\n            endTime: endDateData[1]\n          });\n        }\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.taskId !== this.props.taskId) {\n      this.setState({\n        taskName: '',\n        taskId: null,\n        startDate: undefined,\n        endDate: undefined,\n        startTime: undefined,\n        endTime: undefined\n      });\n    }\n  }\n\n  handleSubmit(e) {\n    if (this.state.taskName !== '') {\n      if (this.state.taskId !== null && this.state.taskId !== undefined) {\n        Object.values(this.props.tasks).map((item, index) => {\n          if (item.id === this.state.taskId) {\n            console.log(this.props.tasks[index]);\n            this.props.tasks[index]['name'] = this.state.taskName;\n            this.props.tasks[index]['startDate'] = this.state.startDate + ' ' + this.state.startTime;\n            this.props.tasks[index]['endDate'] = this.state.endDate + ' ' + this.state.endTime;\n          }\n        });\n        this.props.handleTasks();\n      } else {\n        let existingTasks = this.props.tasks;\n        this.props.handleTasks(e, existingTasks);\n        const details = {\n          \"id\": this.props.tasks.length + 1,\n          \"name\": this.state.taskName,\n          \"startDate\": this.state.startDate + ' ' + this.state.startTime,\n          \"endDate\": this.state.endDate + ' ' + this.state.endTime\n        };\n        this.props.tasks.push(details);\n        localStorage.clear();\n        localStorage.setItem('AllTasks', this.props.tasks);\n        this.props.handleTasks(); // this.setState({\n        //   showManageTasks: true,\n        // })\n      }\n    } else {\n      this.setState({\n        taskNameError: true\n      });\n    }\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      taskNameError: false\n    });\n  } // handleDate(e, type = '') {\n  //   var today = new Date();\n  //   const {name, value} = e.target;\n  //   // console.log(e.target);\n  //   // console.log(e.target.name);\n  //   // console.log(e.target.value);\n  //   var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  //   let timeStamp = e.target.value + ' ' + time;\n  //   // console.log(timeStamp);\n  //   this.setState({\n  //       [name]: timeStamp,\n  //   })\n  // }\n\n\n  render() {\n    const {\n      taskName,\n      taskNameError,\n      startDate\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // <>\n      //   {!this.state.showManageTasks &&\n      React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(reactbootstrap.Container, {\n        className: \"pt-5 px-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, 'Create task'))), /*#__PURE__*/React.createElement(reactbootstrap.Form, {\n        style: {\n          width: '600px',\n          height: '200px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginbottom: '15px',\n          border: '0px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, 'Task name', /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 88\n        }\n      }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"taskName\",\n        value: taskName,\n        type: \"text\",\n        style: {\n          marginBottom: '15px',\n          width: '250px',\n          borderColor: \"black\",\n          borderWidth: '3px'\n        },\n        id: \"exampleInputPassword1\",\n        placeholder: \"TaskName\",\n        onChange: this.handleChange,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      })), taskNameError === true && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: 'red',\n          fontSize: '15px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, \"Task name is required\")), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginbottom: '15px',\n          border: '0px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, 'Start date', /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 89\n        }\n      }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"startDate\",\n        value: this.state.startDate,\n        type: \"date\",\n        style: {\n          marginBottom: '15px',\n          width: '250px',\n          borderColor: \"black\",\n          borderWidth: '3px'\n        },\n        id: \"exampleInputPassword1\",\n        placeholder: \"Start date\",\n        onChange: e => this.setState({\n          startDate: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n        name: \"startTime\",\n        value: this.state.startTime,\n        type: \"time\",\n        style: {\n          marginBottom: '15px',\n          width: '250px',\n          borderColor: \"black\",\n          borderWidth: '3px'\n        },\n        id: \"exampleInputPassword1\",\n        placeholder: \"Start time\",\n        onChange: e => this.setState({\n          startTime: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginbottom: '15px',\n          border: '0px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, 'End date', /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 87\n        }\n      }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"endDate\",\n        value: this.state.endDate,\n        type: \"date\",\n        style: {\n          marginBottom: '15px',\n          width: '250px',\n          borderColor: \"black\",\n          borderWidth: '3px'\n        },\n        id: \"exampleInputPassword1\",\n        placeholder: \"End date\",\n        onChange: e => this.setState({\n          endDate: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }), \"\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n        name: \"endTime\",\n        value: this.state.endTime,\n        type: \"time\",\n        style: {\n          marginBottom: '15px',\n          width: '250px',\n          borderColor: \"black\",\n          borderWidth: '3px'\n        },\n        id: \"exampleInputPassword1\",\n        placeholder: \"Start time\",\n        onChange: e => this.setState({\n          endTime: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n        style: {\n          float: 'right',\n          backgroundColor: '#EC661C',\n          borderColor: \"black\",\n          marginBottom: '25px',\n          marginTop: '25px',\n          width: '80px'\n        },\n        type: \"button\",\n        onClick: e => this.handleSubmit(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, 'Save')))) //   }\n      //   {this.state.showManageTasks &&\n      //     <TasksManager tasks={this.props.tasks}/>\n      //   }\n      // </>\n\n    );\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/TimeTracking/src/Tasks/CreateTask.js"],"names":["React","Component","reactbootstrap","CreateTask","constructor","props","console","log","taskId","tasks","state","undefined","taskName","taskNameError","startDate","endDate","startTime","endTime","handleSubmit","bind","handleChange","componentDidMount","Object","values","map","item","index","id","startDateData","split","endDateData","setState","name","componentDidUpdate","prevProps","prevState","e","handleTasks","existingTasks","details","length","push","localStorage","clear","setItem","value","target","render","color","fontSize","width","height","marginbottom","border","marginBottom","borderColor","borderWidth","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\n// import DatePicker from 'react-datepicker';\n// import { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n// import TasksManager from './TasksManager'\n\nclass CreateTask extends Component {\n    constructor(props) {\n        super(props)\n        console.log(this.props.taskId)\n        console.log(this.props.tasks);\n        this.state = {\n          taskId: (this.props.taskId !== null && this.props.taskId !== undefined) ? this.props.taskId : null,\n          taskName: '',\n          taskNameError: false,\n          startDate: undefined,\n          endDate: undefined,\n          startTime: undefined,\n          endTime: undefined,\n          // showManageTasks: false,\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        // this.handleDate = this.handleDate.bind(this)\n    }\n\n    componentDidMount() {\n      console.log(this.state.taskId);\n      if (this.state.taskId !== null && this.state.taskId !== undefined) {\n        Object.values(this.props.tasks).map((item, index) => {\n          if(item.id === this.state.taskId) {\n            let startDateData = item.startDate.split(\" \")\n            let endDateData = item.endDate.split(\" \")\n            console.log(startDateData);\n            this.setState({\n              taskName: item.name,\n              startDate: startDateData[0],\n              endDate: endDateData[0],\n              startTime: startDateData[1],\n              endTime: endDateData[1],\n            })\n          }\n        })\n      }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      if (prevProps.taskId !== this.props.taskId) {\n        this.setState({\n          taskName: '',\n          taskId: null,\n          startDate: undefined,\n          endDate: undefined,\n          startTime: undefined,\n          endTime: undefined,\n        })\n      }\n    }\n\n    handleSubmit(e) {\n      if (this.state.taskName !== '') {\n        if (this.state.taskId !== null && this.state.taskId !== undefined) {\n          Object.values(this.props.tasks).map((item, index) => {\n            if(item.id === this.state.taskId) {\n              console.log(this.props.tasks[index]);\n              this.props.tasks[index]['name'] = this.state.taskName\n              this.props.tasks[index]['startDate'] =this.state.startDate + ' ' + this.state.startTime\n              this.props.tasks[index]['endDate'] = this.state.endDate + ' ' + this.state.endTime\n            }\n          })\n          this.props.handleTasks();\n        } else {\n          let existingTasks = this.props.tasks\n          this.props.handleTasks(e, existingTasks);\n          const details = {\n            \"id\": this.props.tasks.length + 1,\n            \"name\": this.state.taskName,\n            \"startDate\": this.state.startDate + ' ' + this.state.startTime,\n            \"endDate\": this.state.endDate + ' ' + this.state.endTime,\n          }\n\n          this.props.tasks.push(details)\n          localStorage.clear();\n          localStorage.setItem('AllTasks', this.props.tasks);\n          this.props.handleTasks();\n          // this.setState({\n          //   showManageTasks: true,\n          // })\n        }\n      } else {\n        this.setState({\n            taskNameError: true,\n        })\n      }\n\n    }\n\n    handleChange(e) {\n      const {name, value} = e.target;\n        this.setState({\n            [name]: value,\n            taskNameError: false,\n        })\n    }\n\n    // handleDate(e, type = '') {\n    //   var today = new Date();\n    //   const {name, value} = e.target;\n    //   // console.log(e.target);\n    //   // console.log(e.target.name);\n    //   // console.log(e.target.value);\n    //   var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    //   let timeStamp = e.target.value + ' ' + time;\n    //   // console.log(timeStamp);\n    //   this.setState({\n    //       [name]: timeStamp,\n    //   })\n    // }\n\n    render() {\n      const { taskName, taskNameError, startDate } = this.state\n\n      return (\n        // <>\n        //   {!this.state.showManageTasks &&\n            <div className=\"\">\n            <reactbootstrap.Container className=\"pt-5 px-0\">\n              <div style={{ color: '#EC661C', fontSize: '20px'}} >\n                  <span><h4>{'Create task'}</h4></span>\n              </div>\n              <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n                <reactbootstrap.FormGroup>\n                  <div style={{ marginbottom: '15px',border: '0px' }}>\n                    <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Task name'}<span style={{ color: 'red' }}> * </span></label>\n                    <input\n                      name=\"taskName\"\n                      value={taskName}\n                      type=\"text\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"TaskName\"}\n                      onChange={this.handleChange}\n                      autoComplete=\"off\" />\n                  </div>\n                  {taskNameError === true &&\n                    <div style={{ color: 'red', fontSize: '15px' }}>{\"Task name is required\"}</div>\n                  }\n                </reactbootstrap.FormGroup>\n                <reactbootstrap.FormGroup>\n                  <div style={{ marginbottom: '15px',border: '0px' }}>\n                    <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Start date'}<span style={{ color: 'red' }}> * </span></label>\n                    <input\n                      name=\"startDate\"\n                      value={this.state.startDate}\n                      type=\"date\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"Start date\"}\n                      onChange={(e) =>  this.setState({startDate: e.target.value})}\n                    />\n                    &nbsp;\n                    <input\n                      name=\"startTime\"\n                      value={this.state.startTime}\n                      type=\"time\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"Start time\"}\n                      onChange={(e) =>  this.setState({startTime: e.target.value})}\n                    />\n                  </div>\n                </reactbootstrap.FormGroup>\n                <reactbootstrap.FormGroup>\n                  <div style={{ marginbottom: '15px',border: '0px' }}>\n                    <label style={{ color: '#EC661C', fontSize: '14px' }}>{'End date'}<span style={{ color: 'red' }}> * </span></label>\n                    <input\n                      name=\"endDate\"\n                      value={this.state.endDate}\n                      type=\"date\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"End date\"}\n                      onChange={(e) => this.setState({endDate: e.target.value})}\n                    />\n                    &nbsp;\n                    <input\n                      name=\"endTime\"\n                      value={this.state.endTime}\n                      type=\"time\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                      id=\"exampleInputPassword1\"\n                      placeholder={\"Start time\"}\n                      onChange={(e) =>  this.setState({endTime: e.target.value})}\n                    />\n                  </div>\n                </reactbootstrap.FormGroup>\n                <reactbootstrap.Button style={{ float: 'right',backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={(e) => this.handleSubmit(e)}>\n                      {'Save'}\n                </reactbootstrap.Button>\n              </reactbootstrap.Form>\n            </reactbootstrap.Container>\n          </div>\n      //   }\n      //   {this.state.showManageTasks &&\n      //     <TasksManager tasks={this.props.tasks}/>\n      //   }\n      // </>\n      );\n    }\n}\n\nexport default (CreateTask);\n"]},"metadata":{},"sourceType":"module"}